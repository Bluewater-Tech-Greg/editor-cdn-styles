name: Build and Deploy CSS from SCSS

on:
  push:
    branches: [ main ]
    paths: 
      - 'scss/**/*.scss'
      - 'build-order.json'
      - '.github/workflows/build-css.yml'

# Required permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install -g sass
        sudo apt-get update && sudo apt-get install -y jq
      
    - name: Clean up any previous generated files
      run: |
        # Remove any leftover generated files from previous runs
        echo "🧹 Cleaning up previous generated files..."
        find scss -name "index.scss" -delete 2>/dev/null || true
        rm -f scss/main.scss 2>/dev/null || true
        rm -f unified.scss 2>/dev/null || true
        echo "✅ Cleanup complete"
      
    - name: Create concatenated SCSS file
      run: |
        # Create output directory
        mkdir -p build
        
        # Check if build-order.json exists
        if [ ! -f "build-order.json" ]; then
          echo "❌ Error: build-order.json not found!"
          echo "Please create a build-order.json file to specify folder processing order."
          exit 1
        fi
        
        echo "✓ Using custom build order from build-order.json"
        
        # Extract folder list from JSON
        folders=$(cat build-order.json | jq -r '.folders[]')
        
        # Debug: Show what folders we found
        echo "📋 Folders to process:"
        for folder in $folders; do
          echo "  - $folder"
          if [ -d "$folder" ]; then
            file_count=$(find "$folder" -name "*.scss" -not -name "_*" | wc -l)
            echo "    Files: $file_count SCSS files"
            find "$folder" -name "*.scss" -not -name "_*" | sort | sed 's/^/      /'
          else
            echo "    ❌ Folder not found"
          fi
        done
        echo ""
        
        # Create a unified SCSS file by concatenating all content
        echo "/* Auto-generated unified SCSS file */" > unified.scss
        echo "/* Generated on $(date) */" >> unified.scss
        echo "/* All SCSS files concatenated in dependency order */" >> unified.scss
        echo "" >> unified.scss
        
        # Process each folder in order and concatenate ALL content
        for folder in $folders; do
          if [ -d "$folder" ]; then
            echo "📁 Processing folder: $folder"
            
            # Add folder section comment directly
            echo "" >> unified.scss
            echo "/* =================================================" >> unified.scss
            echo " * Content from: $folder" >> unified.scss
            echo " * ================================================= */" >> unified.scss
            echo "" >> unified.scss
            
            # Get list of SCSS files
            file_list=$(find "$folder" -name "*.scss" -not -name "_*" | sort)
            
            if [ -n "$file_list" ]; then
              for file in $file_list; do
                echo "  📄 Concatenating: $file"
                echo "" >> unified.scss
                echo "/* --- Content from: $file --- */" >> unified.scss
                
                # Add the actual file content (remove any @import/@use lines)
                grep -v '^@import\|^@use' "$file" >> unified.scss
                echo "" >> unified.scss
              done
            else
              echo "  ⚠️  No non-partial SCSS files found in $folder"
            fi
            
          else
            echo "❌ Warning: Folder $folder not found"
          fi
        done
        
        echo "📝 Generated unified.scss preview (first 100 lines):"
        head -100 unified.scss
        
        echo ""
        echo "📊 File size and content check:"
        wc -l unified.scss
        echo ""
        echo "🔍 Checking for variable definitions:"
        grep -n '\$.*:' unified.scss | head -10
        echo ""
        echo "🔍 Checking for variable usage:"
        grep -n '\$primary-color' unified.scss | head -5
        
    - name: Compile SCSS to CSS
      run: |
        # Compile the unified SCSS file to CSS
        echo "🔨 Compiling concatenated SCSS to CSS..."
        sass unified.scss:build/styles.css --style=compressed --source-map --embed-sources
        
        # Create uncompressed version for debugging
        sass unified.scss:build/styles.debug.css --style=expanded --source-map --embed-sources
        
        # Show compilation success
        echo "✅ CSS compilation complete!"
        echo "📊 Output file sizes:"
        ls -lh build/
        
        # Clean up the unified file
        rm unified.scss
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './build'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
